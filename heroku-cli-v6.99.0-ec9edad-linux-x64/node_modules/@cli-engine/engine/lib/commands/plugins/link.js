"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const command_1 = require("@cli-engine/command");
const cli_ux_1 = require("cli-ux");
const path = require("path");
const hooks_1 = require("../../hooks");
const base_1 = require("../base");
let bin = 'heroku';
const g = global;
if (g.config) {
    bin = g.config.bin;
}
class PluginsLink extends base_1.default {
    run() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            let p = path.resolve(this.argv[0] || process.cwd());
            cli_ux_1.cli.action.start(`Linking ${p}`);
            yield this.config.plugins.install({ type: 'link', root: p, force: this.flags.force });
            const hooks = new hooks_1.Hooks(this.config);
            yield hooks.run('update');
        });
    }
}
PluginsLink.topic = 'plugins';
PluginsLink.command = 'link';
PluginsLink.flags = {
    force: command_1.flags.boolean({ char: 'f' }),
};
PluginsLink.args = [{ name: 'path', optional: true, description: 'local file path to plugin root' }];
PluginsLink.description = 'links a local plugin to the CLI for development';
PluginsLink.help = `Example:
    $ ${bin} plugins:link .
    Installing dependencies for /Users/dickeyxxx/src/github.com/heroku/heroku-status... done
    Running prepare script for /Users/dickeyxxx/src/github.com/heroku/heroku-status... done`;
exports.default = PluginsLink;
