import Config from '@cli-engine/config';
import { ICommandInfo } from './command';
import { IPluginModule, IPluginPJSON } from './plugins/plugin';
export declare abstract class Hook<T extends keyof IHooks> {
    protected config: Config;
    protected options: IHooks[T];
    constructor(config: Config, options?: IHooks[T]);
    abstract run(): Promise<void>;
}
export interface IHooks {
    init: {};
    update: {};
    'plugins:parse': {
        module: IPluginModule;
        pjson: IPluginPJSON;
    };
    prerun: {
        Command: ICommandInfo;
        argv: string[];
    };
}
export declare class Hooks {
    private config;
    constructor(config: Config);
    run<T extends keyof IHooks>(event: T, options?: IHooks[T]): Promise<void>;
    private isLegacyHook<T>(Hook);
}
