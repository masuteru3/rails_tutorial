"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const deps_1 = require("./deps");
const debug = require('debug')('util');
function compare(...props) {
    return (a, b) => {
        for (let prop of props) {
            if (a[prop] === undefined)
                return -1;
            if (b[prop] === undefined)
                return 1;
            if (a[prop] < b[prop])
                return -1;
            if (a[prop] > b[prop])
                return 1;
        }
        return 0;
    };
}
exports.compare = compare;
function wait(ms, unref = false) {
    return new Promise(resolve => {
        let t = setTimeout(resolve, ms);
        if (unref)
            t.unref();
    });
}
exports.wait = wait;
function timeout(p, ms) {
    return Promise.race([p, wait(ms, true).then(() => debug('timed out'))]);
}
exports.timeout = timeout;
function undefault(obj) {
    if (obj.__esModule === true)
        return obj.default;
    return obj;
}
exports.undefault = undefault;
function objEntries(input) {
    if (!input)
        return [];
    return Object.keys(input).map(k => [k, input[k]]);
}
exports.objEntries = objEntries;
function objValues(input) {
    return objEntries(input).map(([, v]) => v);
}
exports.objValues = objValues;
function minorVersionGreater(fromString, toString) {
    const from = deps_1.default.semver.parse(fromString);
    const to = deps_1.default.semver.parse(toString);
    if (from.major < to.major)
        return true;
    if (from.major === to.major && from.minor < to.minor)
        return true;
    return false;
}
exports.minorVersionGreater = minorVersionGreater;
