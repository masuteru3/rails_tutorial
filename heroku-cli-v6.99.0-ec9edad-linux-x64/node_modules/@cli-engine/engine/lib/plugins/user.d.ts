import Config from '../config';
import { IPluginOptions, Plugin, PluginType } from './plugin';
import Yarn from './yarn';
export declare class UserPlugins {
    private config;
    plugins: UserPlugin[];
    yarn: Yarn;
    private manifest;
    private lock;
    private debug;
    constructor(config: Config);
    submanagers(): Promise<UserPlugin[]>;
    update(): Promise<void>;
    install(name: string, tag: string): Promise<void>;
    uninstall(name: string): Promise<boolean>;
    refresh(force?: boolean): Promise<void>;
    init(): Promise<void>;
    private hasPlugins();
    private fetchPlugins();
    private loadPlugin(name, tag);
    private userPluginPath(name);
    private readonly userPluginsDir;
    private readonly pjsonPath;
    private createPJSON();
    private migrate();
    private addPlugin(name, tag);
    private removePlugin(name);
    private manifestPlugins();
    private yarnNodeVersion();
}
export declare type UserPluginOptions = IPluginOptions & {
    tag: string;
};
export declare class UserPlugin extends Plugin {
    type: PluginType;
    tag: string;
    constructor(opts: UserPluginOptions);
}
