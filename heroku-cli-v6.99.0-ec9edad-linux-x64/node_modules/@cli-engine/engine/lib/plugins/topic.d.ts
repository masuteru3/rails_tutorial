export interface ICommands {
    [k: string]: ICommandInfo;
}
export interface ICommandInfo {
    id: string;
    hidden: boolean;
    help: string;
    helpLine: [string, string | undefined];
}
export interface ITopicOpts {
    name: string;
    description?: string;
    hidden?: boolean;
    commands?: ICommands;
    subtopics?: ITopics;
}
export interface ITopics {
    [k: string]: Topic;
}
export declare class Topic {
    static parentTopicIDof(id: string): string;
    static findTopic(name: string, topics: ITopics): Topic | undefined;
    static findOrCreateTopic(opts: ITopicOpts, topics: ITopics): Topic;
    static mergeSubtopics(...subtopics: Array<ITopics | undefined>): ITopics;
    static mergeTopics(a: ITopicOpts, b: ITopicOpts): Topic;
    name: string;
    description?: string;
    hidden: boolean;
    subtopics: ITopics;
    commands: ICommands;
    constructor(opts: ITopicOpts);
}
