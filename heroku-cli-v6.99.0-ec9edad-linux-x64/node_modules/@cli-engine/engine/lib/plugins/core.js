"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const path = require("path");
const plugin_1 = require("./plugin");
class CorePlugins {
    constructor(config) {
        this.config = config;
    }
    submanagers() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield this.init();
            return this.plugins;
        });
    }
    init() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            if (this.plugins || !this.config.root)
                return;
            this.plugins = this.config.corePlugins.map(name => {
                let pjsonPath = this.pjsonPath(name);
                return new CorePlugin({
                    pjson: require(pjsonPath),
                    root: path.dirname(pjsonPath),
                    config: this.config,
                    type: 'core',
                });
            });
        });
    }
    pjsonPath(name) {
        for (let root of this.nextRoot()) {
            try {
                return require.resolve(path.join(root, 'node_modules', name, 'package.json'));
            }
            catch (err) {
                if (err.code === 'MODULE_NOT_FOUND')
                    continue;
                throw err;
            }
        }
        return require.resolve(path.join(this.config.root, 'node_modules', name, 'package.json'));
    }
    *nextRoot() {
        let root = this.config.root;
        yield root;
        while (root !== '/') {
            yield (root = path.dirname(root));
        }
    }
}
exports.CorePlugins = CorePlugins;
class CorePlugin extends plugin_1.Plugin {
    constructor() {
        super(...arguments);
        this.type = 'core';
    }
}
exports.CorePlugin = CorePlugin;
