"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const cli_ux_1 = require("cli-ux");
const path = require("path");
const deps_1 = require("./deps");
const debug = require('debug')('cli:hooks');
class Hook {
    constructor(config, options = {}) {
        this.config = config;
        this.options = options;
    }
}
exports.Hook = Hook;
class Hooks {
    constructor(config) {
        this.config = config;
    }
    run(event, options = {}) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            let scripts = this.config.hooks[event];
            if (!scripts || !this.config.root)
                return;
            for (let script of scripts) {
                script = path.join(this.config.root, script);
                debug(`%s %s`, event, script);
                let Hook;
                try {
                    Hook = deps_1.default.util.undefault(require(script));
                }
                catch (err) {
                    cli_ux_1.default.warn(err, { context: `hook:${event} loading ${script}` });
                    continue;
                }
                if (this.isLegacyHook(Hook)) {
                    yield Hook(this.config, options);
                }
                else {
                    const hook = new Hook(this.config, options);
                    yield hook.run();
                }
            }
        });
    }
    isLegacyHook(Hook) {
        return !Hook.prototype;
    }
}
exports.Hooks = Hooks;
